#!/bin/bash

# Script replaces the word in all the files

FLAG_DIR=-d
FLAG_FIL=-f
FLAG_WRD=-w
FLAG_RE0=-r0
FLAG_RE1=-r1
FLAG_PNT=-p
FLAG_SUF=-s

REC=1

proc_dir() {

	if [ -d "$1" ]; then
		
		if [[ ${REC} != 1 ]]; then local DEPTH_FLAGS="-maxdepth 1"; fi

		if [ -z "${SUFFIX[0]}" ]; then
			FILES="${FILES}$(find "$1" ${DEPTH_FLAGS} -type f -name "*") "
		else
			for j in "${SUFFIX[@]}"; do
				FILES="${FILES}$(find "$1" ${DEPTH_FLAGS} -type f -name "${j}") "
			done
		fi
		
		return 0

	fi
	return 1
}

proc_file() {
	if [ -f $1 ]; then
		FILES="${FILES}$1 "
		return 0
	fi
	return 1
}

proc_targets() {
	local TARGETS_ARRAY_C=${#TARGETS[@]}
	TARGETS[${TARGETS_ARRAY_C}]="$1"
	return 0
}

proc_suffix() {
	local SUFFIX_ARRAY_C=${#SUFFIX[@]}
	SUFFIX[${SUFFIX_ARRAY_C}]="$1"
	return 0
}

safe_print() {
	if [ ! -z ${PRNT} ]; then
		printf "$1"
		return 0
	fi
	return 1
}

CURR_FUNC=proc_targets

for (( i=1; i <= $#; i++ )); do

	case "${!i}" in
	${FLAG_DIR} )
		CURR_FUNC=proc_dir
		;;
	${FLAG_FIL} )
		CURR_FUNC=proc_file
		;;
	${FLAG_WRD} )
		CURR_FUNC=proc_targets
		;;
	${FLAG_SUF} )
		CURR_FUNC=proc_suffix
		;;
	${FLAG_RE0} )
		REC=0
		;;
	${FLAG_RE1} )
		REC=1
		;;
	${FLAG_PNT} )
		PRNT=1
		;;
	* )
		${CURR_FUNC} "${!i}"
		;;
	esac
done

if [ -z "${TARGETS[0]}" ]; then
	printf "You have to specify the old word\n" >&2
	exit 1
fi

if [ -z "${TARGETS[1]}" ]; then
	printf "You have to specify the new word\n" >&2
	exit 1
fi

safe_print "From: \'${TARGETS[0]}\' to: \'${TARGETS[1]}\'"

for i in ${FILES}; do
	safe_print "\nCurrent file: $i"
	sed -i "s/${TARGETS[0]}/${TARGETS[1]}/g" $i
done

exit 0
